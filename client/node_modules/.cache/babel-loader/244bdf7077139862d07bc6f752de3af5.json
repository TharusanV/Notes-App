{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\components\\\\NoteEditor.jsx\";\nimport { useState } from 'react';\nimport Toolbar from './ToolBar';\nimport { Editor } from 'ckeditor5-custom-build/build/ckeditor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = _ref => {\n  let {\n    prop_GetActiveNote,\n    prop_OnUpdateNote\n  } = _ref;\n  const onEditField = (key, value) => {\n    prop_OnUpdateNote({\n      ...prop_GetActiveNote,\n      id: prop_GetActiveNote.id,\n      [key]: value,\n      lastModified: Date.now()\n    });\n  };\n  ClassicEditorBuild.create(element).then(editor => {\n    // Will get the stringified content.\n    console.log(viewToPlainText(editor.editing.view.document.getRoot()));\n  }).catch(error => {\n    console.error(error.stack);\n  });\n  if (!prop_GetActiveNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"No selected note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-note-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"note-title\",\n        type: \"text\",\n        onChange: event => onEditField(\"title\", event.target.value),\n        autoFocus: true,\n        value: prop_GetActiveNote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        className: \"test\",\n        editor: Editor,\n        data: \"<p></p>\",\n        onReady: editor => {\n          console.log('Editor is ready to use!', editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n          onEditField(\"body\", data);\n        },\n        onBlur: (event, editor) => {\n          console.log('Blur.', editor);\n        },\n        onFocus: (event, editor) => {\n          console.log('Focus.', editor);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["useState","Toolbar","Editor","CKEditor","NoteEditor","prop_GetActiveNote","prop_OnUpdateNote","onEditField","key","value","id","lastModified","Date","now","ClassicEditorBuild","create","element","then","editor","console","log","viewToPlainText","editing","view","document","getRoot","catch","error","stack","event","target","title","data","getData"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/components/NoteEditor.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport Toolbar from './ToolBar';\r\n\r\nimport {Editor} from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\n\r\nconst NoteEditor = ( {prop_GetActiveNote, prop_OnUpdateNote}) => {\r\n \r\n  const onEditField = (key, value) => {\r\n    \r\n    prop_OnUpdateNote({\r\n      ...prop_GetActiveNote,\r\n      id: prop_GetActiveNote.id,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    })\r\n  };\r\n\r\n  ClassicEditorBuild\r\n    .create( element )\r\n    .then( editor => {\r\n        // Will get the stringified content.\r\n        console.log( viewToPlainText( editor.editing.view.document.getRoot() ) );\r\n    } )\r\n    .catch( error => {\r\n        console.error( error.stack );\r\n    } )\r\n\r\n  if(!prop_GetActiveNote) return <div className='no-active-note'>No selected note</div>  \r\n\r\n  return (\r\n    <div className='hero-container'>\r\n      <div className='main-note-editor-container'>     \r\n        <input \r\n          id='note-title' \r\n          type='text' \r\n          onChange={(event) => onEditField(\"title\", event.target.value)} \r\n          autoFocus \r\n          value={prop_GetActiveNote.title} \r\n        />\r\n\r\n        <CKEditor\r\n          className='test'\r\n          editor={Editor}\r\n          data=\"<p></p>\"\r\n          onReady={editor => {\r\n              console.log('Editor is ready to use!', editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ event, editor, data });\r\n              onEditField(\"body\", data)\r\n          }}\r\n          onBlur={(event, editor) => {\r\n              console.log('Blur.', editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n              console.log('Focus.', editor);\r\n          }}\r\n      />\r\n        \r\n      </div>\r\n    </div>\r\n\r\n\r\n      \r\n    \r\n    \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default NoteEditor\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAAQC,MAAM,QAAO,uCAAuC;AAC5D,SAASC,QAAQ,QAAQ,2BAA2B;AAAA;AAEpD,MAAMC,UAAU,GAAG,QAA8C;EAAA,IAA5C;IAACC,kBAAkB;IAAEC;EAAiB,CAAC;EAE1D,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,KAAK,KAAK;IAElCH,iBAAiB,CAAC;MAChB,GAAGD,kBAAkB;MACrBK,EAAE,EAAEL,kBAAkB,CAACK,EAAE;MACzB,CAACF,GAAG,GAAGC,KAAK;MACZE,YAAY,EAAEC,IAAI,CAACC,GAAG;IACxB,CAAC,CAAC;EACJ,CAAC;EAEDC,kBAAkB,CACfC,MAAM,CAAEC,OAAO,CAAE,CACjBC,IAAI,CAAEC,MAAM,IAAI;IACb;IACAC,OAAO,CAACC,GAAG,CAAEC,eAAe,CAAEH,MAAM,CAACI,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACC,OAAO,EAAE,CAAE,CAAE;EAC5E,CAAC,CAAE,CACFC,KAAK,CAAEC,KAAK,IAAI;IACbR,OAAO,CAACQ,KAAK,CAAEA,KAAK,CAACC,KAAK,CAAE;EAChC,CAAC,CAAE;EAEL,IAAG,CAACvB,kBAAkB,EAAE,oBAAO;IAAK,SAAS,EAAC,gBAAgB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;EAErF,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC7B;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QACE,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGwB,KAAK,IAAKtB,WAAW,CAAC,OAAO,EAAEsB,KAAK,CAACC,MAAM,CAACrB,KAAK,CAAE;QAC9D,SAAS;QACT,KAAK,EAAEJ,kBAAkB,CAAC0B;MAAM;QAAA;QAAA;QAAA;MAAA,QAChC,eAEF,QAAC,QAAQ;QACP,SAAS,EAAC,MAAM;QAChB,MAAM,EAAE7B,MAAO;QACf,IAAI,EAAC,SAAS;QACd,OAAO,EAAEgB,MAAM,IAAI;UACfC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,MAAM,CAAC;QAClD,CAAE;QACF,QAAQ,EAAE,CAACW,KAAK,EAAEX,MAAM,KAAK;UACzB,MAAMc,IAAI,GAAGd,MAAM,CAACe,OAAO,EAAE;UAC7Bd,OAAO,CAACC,GAAG,CAAC;YAAES,KAAK;YAAEX,MAAM;YAAEc;UAAK,CAAC,CAAC;UACpCzB,WAAW,CAAC,MAAM,EAAEyB,IAAI,CAAC;QAC7B,CAAE;QACF,MAAM,EAAE,CAACH,KAAK,EAAEX,MAAM,KAAK;UACvBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAAC;QAChC,CAAE;QACF,OAAO,EAAE,CAACW,KAAK,EAAEX,MAAM,KAAK;UACxBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;QACjC;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAEI;IAAA;IAAA;IAAA;EAAA,QACF;AASV,CAAC;AAAA,KAjEKd,UAAU;AAmEhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}