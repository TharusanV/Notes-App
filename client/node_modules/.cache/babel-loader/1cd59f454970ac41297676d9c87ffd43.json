{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\components\\\\Editor.jsx\";\nimport { useState } from 'react';\nimport Toolbar from './ToolBar';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = _ref => {\n  let {\n    prop_GetActiveNote,\n    prop_OnUpdateNote\n  } = _ref;\n  const onEditField = (key, value) => {\n    prop_OnUpdateNote({\n      ...prop_GetActiveNote,\n      id: prop_GetActiveNote.id,\n      [key]: value,\n      lastModified: Date.now()\n    });\n  };\n  if (!prop_GetActiveNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"No selected note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-note-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"note-title\",\n        type: \"text\",\n        onChange: event => onEditField(\"title\", event.target.value),\n        autoFocus: true,\n        value: prop_GetActiveNote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        value: prop_GetActiveNote.body,\n        onChange: e => onEditField(\"body\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text-input\",\n        onChange: e => onEditField(\"body\", e.target.value),\n        className: \"test\",\n        contentEditable: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \"document.getElementById('text-input').textContent = 'My text';\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useState","Toolbar","ReactQuill","Editor","prop_GetActiveNote","prop_OnUpdateNote","onEditField","key","value","id","lastModified","Date","now","event","target","title","body","e"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/components/Editor.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport Toolbar from './ToolBar';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst Editor = ( {prop_GetActiveNote, prop_OnUpdateNote}) => {\r\n \r\n  const onEditField = (key, value) => {\r\n    \r\n    prop_OnUpdateNote({\r\n      ...prop_GetActiveNote,\r\n      id: prop_GetActiveNote.id,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    })\r\n  };\r\n\r\n\r\n  if(!prop_GetActiveNote) return <div className='no-active-note'>No selected note</div>  \r\n\r\n  return (\r\n    <div className='hero-container'>\r\n      <div className='main-note-editor-container'>     \r\n        <input \r\n          id='note-title' \r\n          type='text' \r\n          onChange={(event) => onEditField(\"title\", event.target.value)} \r\n          autoFocus \r\n          value={prop_GetActiveNote.title} \r\n        />\r\n\r\n\r\n        <Toolbar/>\r\n\r\n        <textarea\r\n          id=\"body\"\r\n          value={prop_GetActiveNote.body}\r\n          onChange={(e) => onEditField(\"body\", e.target.value)}\r\n        />\r\n\r\n        <div id=\"text-input\" onChange={(e) => onEditField(\"body\", e.target.value)} className='test' contentEditable=\"true\"></div>\r\n        document.getElementById('text-input').textContent = 'My text';\r\n      </div>\r\n    </div>\r\n\r\n\r\n      \r\n    \r\n    \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Editor\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAAC;AAEzC,MAAMC,MAAM,GAAG,QAA8C;EAAA,IAA5C;IAACC,kBAAkB;IAAEC;EAAiB,CAAC;EAEtD,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,KAAK,KAAK;IAElCH,iBAAiB,CAAC;MAChB,GAAGD,kBAAkB;MACrBK,EAAE,EAAEL,kBAAkB,CAACK,EAAE;MACzB,CAACF,GAAG,GAAGC,KAAK;MACZE,YAAY,EAAEC,IAAI,CAACC,GAAG;IACxB,CAAC,CAAC;EACJ,CAAC;EAGD,IAAG,CAACR,kBAAkB,EAAE,oBAAO;IAAK,SAAS,EAAC,gBAAgB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;EAErF,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC7B;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QACE,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGS,KAAK,IAAKP,WAAW,CAAC,OAAO,EAAEO,KAAK,CAACC,MAAM,CAACN,KAAK,CAAE;QAC9D,SAAS;QACT,KAAK,EAAEJ,kBAAkB,CAACW;MAAM;QAAA;QAAA;QAAA;MAAA,QAChC,eAGF,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAEV;QACE,EAAE,EAAC,MAAM;QACT,KAAK,EAAEX,kBAAkB,CAACY,IAAK;QAC/B,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAAC,MAAM,EAAEW,CAAC,CAACH,MAAM,CAACN,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD,eAEF;QAAK,EAAE,EAAC,YAAY;QAAC,QAAQ,EAAGS,CAAC,IAAKX,WAAW,CAAC,MAAM,EAAEW,CAAC,CAACH,MAAM,CAACN,KAAK,CAAE;QAAC,SAAS,EAAC,MAAM;QAAC,eAAe,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAErH;IAAA;IAAA;IAAA;EAAA,QACF;AASV,CAAC;AAAA,KA/CKL,MAAM;AAiDZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}