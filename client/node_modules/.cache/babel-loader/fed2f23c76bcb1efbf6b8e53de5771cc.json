{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Editor, Sidebar, Toolbar } from './components';\nimport { useState } from 'react';\nimport uuid from 'react-uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]); //The ... means that we will take everything in the existing notes array and put it into this new array\n  };\n\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote);\n  };\n  const onDeleteNote = deletedNoteID => {\n    setNotes(notes.filter(note => note.id != deletedNoteID)); //Will print false if it matches with the to be deleted note id and then remove it\n  };\n\n  const onUpdateNote = updateNote => {\n    const updateNotesArray = notes.map(note => {\n      if (note.id === activeNote) {\n        return updateNote;\n      }\n      return note;\n    });\n    setNotes(updateNotesArray);\n  };\n  const editor = useEditor({\n    content: `<p></p>`,\n    extensions: [StarterKit, TextStyle, Color, CharacterCount, FontSize, Underline, FontFamily]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      prop_Notes: notes,\n      prop_OnAddNote: onAddNote,\n      prop_OnDeleteNote: onDeleteNote,\n      prop_ActiveNote: activeNote,\n      prop_SetActiveNote: setActiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      prop_GetActiveNote: getActiveNote(),\n      prop_OnUpdateNote: onUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YAlSQ6kogAXrP/eFQBa4vVi4ifk=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Editor","Sidebar","Toolbar","useState","uuid","App","notes","setNotes","activeNote","setActiveNote","onAddNote","newNote","id","title","body","lastModified","Date","now","getActiveNote","find","note","onDeleteNote","deletedNoteID","filter","onUpdateNote","updateNote","updateNotesArray","map","editor","useEditor","content","extensions","StarterKit","TextStyle","Color","CharacterCount","FontSize","Underline","FontFamily"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { Editor, Sidebar, Toolbar } from './components';\r\nimport { useState } from 'react';\r\nimport uuid from 'react-uuid'\r\n\r\nconst App = () => {\r\n\r\n  const [notes, setNotes] = useState([]);\r\n  const [activeNote, setActiveNote] = useState(false);\r\n\r\n  const onAddNote = () => {\r\n    const newNote = {\r\n      id: uuid(),\r\n      title: \"Untitled Note\",\r\n      body: \"\",\r\n      lastModified: Date.now() ,\r\n    };\r\n\r\n    setNotes([newNote, ...notes]); //The ... means that we will take everything in the existing notes array and put it into this new array\r\n  }\r\n\r\n  const getActiveNote = () => {\r\n    return notes.find((note) => note.id === activeNote)\r\n  }\r\n\r\n  const onDeleteNote = (deletedNoteID) => {\r\n    setNotes(notes.filter((note) => note.id != deletedNoteID)); //Will print false if it matches with the to be deleted note id and then remove it\r\n  }\r\n\r\n  const onUpdateNote = (updateNote) => {\r\n    const updateNotesArray = notes.map((note) => {\r\n      if(note.id === activeNote){\r\n        return updateNote;\r\n      }\r\n\r\n      return note;\r\n    });\r\n\r\n    setNotes(updateNotesArray);\r\n  }\r\n\r\n  const editor = useEditor({\r\n    content: `<p></p>`,\r\n    extensions: [\r\n      StarterKit, TextStyle, Color, CharacterCount, FontSize, \r\n      Underline, FontFamily,\r\n    ],\r\n  })\r\n\r\n  \r\n\r\n  return (\r\n    <div className='App'>\r\n      <Sidebar prop_Notes={notes} prop_OnAddNote={onAddNote} prop_OnDeleteNote={onDeleteNote} prop_ActiveNote={activeNote} prop_SetActiveNote={setActiveNote}/>\r\n      <Editor prop_GetActiveNote={getActiveNote()} prop_OnUpdateNote={onUpdateNote}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,MAAM,EAAEC,OAAO,EAAEC,OAAO,QAAQ,cAAc;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,YAAY;AAAA;AAE7B,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,SAAS,GAAG,MAAM;IACtB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAER,IAAI,EAAE;MACVS,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAEC,IAAI,CAACC,GAAG;IACxB,CAAC;IAEDV,QAAQ,CAAC,CAACI,OAAO,EAAE,GAAGL,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;;EAED,MAAMY,aAAa,GAAG,MAAM;IAC1B,OAAOZ,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKJ,UAAU,CAAC;EACrD,CAAC;EAED,MAAMa,YAAY,GAAIC,aAAa,IAAK;IACtCf,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACR,EAAE,IAAIU,aAAa,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC;;EAED,MAAME,YAAY,GAAIC,UAAU,IAAK;IACnC,MAAMC,gBAAgB,GAAGpB,KAAK,CAACqB,GAAG,CAAEP,IAAI,IAAK;MAC3C,IAAGA,IAAI,CAACR,EAAE,KAAKJ,UAAU,EAAC;QACxB,OAAOiB,UAAU;MACnB;MAEA,OAAOL,IAAI;IACb,CAAC,CAAC;IAEFb,QAAQ,CAACmB,gBAAgB,CAAC;EAC5B,CAAC;EAED,MAAME,MAAM,GAAGC,SAAS,CAAC;IACvBC,OAAO,EAAG,SAAQ;IAClBC,UAAU,EAAE,CACVC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,cAAc,EAAEC,QAAQ,EACtDC,SAAS,EAAEC,UAAU;EAEzB,CAAC,CAAC;EAIF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,OAAO;MAAC,UAAU,EAAEhC,KAAM;MAAC,cAAc,EAAEI,SAAU;MAAC,iBAAiB,EAAEW,YAAa;MAAC,eAAe,EAAEb,UAAW;MAAC,kBAAkB,EAAEC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACzJ,QAAC,MAAM;MAAC,kBAAkB,EAAES,aAAa,EAAG;MAAC,iBAAiB,EAAEM;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3E;AAEV,CAAC;AAAA,GApDKnB,GAAG;AAAA,KAAHA,GAAG;AAsDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}