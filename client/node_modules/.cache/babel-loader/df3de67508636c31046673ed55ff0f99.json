{"ast":null,"code":"import '@tiptap/extension-text-style';\nimport { Extension } from '@tiptap/core';\nconst FontFamily = Extension.create({\n  name: 'fontFamily',\n  addOptions() {\n    return {\n      types: ['textStyle']\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        fontFamily: {\n          default: null,\n          parseHTML: element => {\n            var _a;\n            return (_a = element.style.fontFamily) === null || _a === void 0 ? void 0 : _a.replace(/['\"]+/g, '');\n          },\n          renderHTML: attributes => {\n            if (!attributes.fontFamily) {\n              return {};\n            }\n            return {\n              style: `font-family: ${attributes.fontFamily}`\n            };\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    return {\n      setFontFamily: fontFamily => _ref => {\n        let {\n          chain\n        } = _ref;\n        return chain().setMark('textStyle', {\n          fontFamily\n        }).run();\n      },\n      unsetFontFamily: () => _ref2 => {\n        let {\n          chain\n        } = _ref2;\n        return chain().setMark('textStyle', {\n          fontFamily: null\n        }).removeEmptyTextStyle().run();\n      }\n    };\n  }\n});\nexport { FontFamily, FontFamily as default };","map":{"version":3,"mappings":";;AAuBa,gBAAU,GAAGA,SAAS,CAACC,MAAM,CAAoB;EAC5DC,IAAI,EAAE,YAAY;EAElBC,UAAU;IACR,OAAO;MACLC,KAAK,EAAE,CAAC,WAAW;KACpB;GACF;EAEDC,mBAAmB;IACjB,OAAO,CACL;MACED,KAAK,EAAE,IAAI,CAACE,OAAO,CAACF,KAAK;MACzBG,UAAU,EAAE;QACVC,UAAU,EAAE;UACVC,OAAO,EAAE,IAAI;UACbC,SAAS,EAAEC,OAAO;YAAA;YAAI,oBAAO,CAACC,KAAK,CAACJ,UAAU,0CAAEK,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;UAAA;UACrEC,UAAU,EAAEP,UAAU,IAAG;YACvB,IAAI,CAACA,UAAU,CAACC,UAAU,EAAE;cAC1B,OAAO,EAAE;YACV;YAED,OAAO;cACLI,KAAK,EAAE,gBAAgBL,UAAU,CAACC,UAAY;aAC/C;;QAEJ;MACF;IACF,EACF;GACF;EAEDO,WAAW;IACT,OAAO;MACLC,aAAa,EAAER,UAAU,IAAI,QAAc;QAAA,IAAb;UAAES;QAAK,CAAE;QACrC,OAAOA,KAAK,EAAE,CACXC,OAAO,CAAC,WAAW,EAAE;UAAEV;QAAU,CAAE,CAAC,CACpCW,GAAG,EAAE;OACT;MACDC,eAAe,EAAE,MAAM,SAAc;QAAA,IAAb;UAAEH;QAAK,CAAE;QAC/B,OAAOA,KAAK,EAAE,CACXC,OAAO,CAAC,WAAW,EAAE;UAAEV,UAAU,EAAE;QAAI,CAAE,CAAC,CAC1Ca,oBAAoB,EAAE,CACtBF,GAAG,EAAE;;KAEX;;AAEJ","names":["Extension","create","name","addOptions","types","addGlobalAttributes","options","attributes","fontFamily","default","parseHTML","element","style","replace","renderHTML","addCommands","setFontFamily","chain","setMark","run","unsetFontFamily","removeEmptyTextStyle"],"sources":["E:\\0TUser18\\Downloads\\Projects\\Notes App\\client\\node_modules\\@tiptap\\extension-font-family\\src\\font-family.ts"],"sourcesContent":["import '@tiptap/extension-text-style'\n\nimport { Extension } from '@tiptap/core'\n\nexport type FontFamilyOptions = {\n  types: string[],\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    fontFamily: {\n      /**\n       * Set the font family\n       */\n      setFontFamily: (fontFamily: string) => ReturnType,\n      /**\n       * Unset the font family\n       */\n      unsetFontFamily: () => ReturnType,\n    }\n  }\n}\n\nexport const FontFamily = Extension.create<FontFamilyOptions>({\n  name: 'fontFamily',\n\n  addOptions() {\n    return {\n      types: ['textStyle'],\n    }\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          fontFamily: {\n            default: null,\n            parseHTML: element => element.style.fontFamily?.replace(/['\"]+/g, ''),\n            renderHTML: attributes => {\n              if (!attributes.fontFamily) {\n                return {}\n              }\n\n              return {\n                style: `font-family: ${attributes.fontFamily}`,\n              }\n            },\n          },\n        },\n      },\n    ]\n  },\n\n  addCommands() {\n    return {\n      setFontFamily: fontFamily => ({ chain }) => {\n        return chain()\n          .setMark('textStyle', { fontFamily })\n          .run()\n      },\n      unsetFontFamily: () => ({ chain }) => {\n        return chain()\n          .setMark('textStyle', { fontFamily: null })\n          .removeEmptyTextStyle()\n          .run()\n      },\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}