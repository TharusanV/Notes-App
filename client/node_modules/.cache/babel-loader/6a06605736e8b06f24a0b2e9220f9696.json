{"ast":null,"code":"/**\r\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\r\n * @typedef {import('../index.js').Handler} Handler\r\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\nimport { u } from 'unist-builder';\n\n/**\r\n * @type {Handler}\r\n * @param {FootnoteReference} node\r\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier);\n  const safeId = normalizeUri(id.toLowerCase());\n  const index = h.footnoteOrder.indexOf(id);\n  /** @type {number} */\n  let counter;\n  if (index === -1) {\n    h.footnoteOrder.push(id);\n    h.footnoteCounts[id] = 1;\n    counter = h.footnoteOrder.length;\n  } else {\n    h.footnoteCounts[id]++;\n    counter = index + 1;\n  }\n  const reuseCounter = h.footnoteCounts[id];\n  return h(node, 'sup', [h(node.position, 'a', {\n    href: '#' + h.clobberPrefix + 'fn-' + safeId,\n    id: h.clobberPrefix + 'fnref-' + safeId + (reuseCounter > 1 ? '-' + reuseCounter : ''),\n    dataFootnoteRef: true,\n    ariaDescribedBy: 'footnote-label'\n  }, [u('text', String(counter))])]);\n}","map":{"version":3,"names":["normalizeUri","u","footnoteReference","h","node","id","String","identifier","safeId","toLowerCase","index","footnoteOrder","indexOf","counter","push","footnoteCounts","length","reuseCounter","position","href","clobberPrefix","dataFootnoteRef","ariaDescribedBy"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js"],"sourcesContent":["/**\r\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\r\n * @typedef {import('../index.js').Handler} Handler\r\n */\r\n\r\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\r\nimport {u} from 'unist-builder'\r\n\r\n/**\r\n * @type {Handler}\r\n * @param {FootnoteReference} node\r\n */\r\nexport function footnoteReference(h, node) {\r\n  const id = String(node.identifier)\r\n  const safeId = normalizeUri(id.toLowerCase())\r\n  const index = h.footnoteOrder.indexOf(id)\r\n  /** @type {number} */\r\n  let counter\r\n\r\n  if (index === -1) {\r\n    h.footnoteOrder.push(id)\r\n    h.footnoteCounts[id] = 1\r\n    counter = h.footnoteOrder.length\r\n  } else {\r\n    h.footnoteCounts[id]++\r\n    counter = index + 1\r\n  }\r\n\r\n  const reuseCounter = h.footnoteCounts[id]\r\n\r\n  return h(node, 'sup', [\r\n    h(\r\n      node.position,\r\n      'a',\r\n      {\r\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\r\n        id:\r\n          h.clobberPrefix +\r\n          'fnref-' +\r\n          safeId +\r\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\r\n        dataFootnoteRef: true,\r\n        ariaDescribedBy: 'footnote-label'\r\n      },\r\n      [u('text', String(counter))]\r\n    )\r\n  ])\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,YAAY,QAAO,6BAA6B;AACxD,SAAQC,CAAC,QAAO,eAAe;;AAE/B;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,CAAC,EAAEC,IAAI,EAAE;EACzC,MAAMC,EAAE,GAAGC,MAAM,CAACF,IAAI,CAACG,UAAU,CAAC;EAClC,MAAMC,MAAM,GAAGR,YAAY,CAACK,EAAE,CAACI,WAAW,EAAE,CAAC;EAC7C,MAAMC,KAAK,GAAGP,CAAC,CAACQ,aAAa,CAACC,OAAO,CAACP,EAAE,CAAC;EACzC;EACA,IAAIQ,OAAO;EAEX,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBP,CAAC,CAACQ,aAAa,CAACG,IAAI,CAACT,EAAE,CAAC;IACxBF,CAAC,CAACY,cAAc,CAACV,EAAE,CAAC,GAAG,CAAC;IACxBQ,OAAO,GAAGV,CAAC,CAACQ,aAAa,CAACK,MAAM;EAClC,CAAC,MAAM;IACLb,CAAC,CAACY,cAAc,CAACV,EAAE,CAAC,EAAE;IACtBQ,OAAO,GAAGH,KAAK,GAAG,CAAC;EACrB;EAEA,MAAMO,YAAY,GAAGd,CAAC,CAACY,cAAc,CAACV,EAAE,CAAC;EAEzC,OAAOF,CAAC,CAACC,IAAI,EAAE,KAAK,EAAE,CACpBD,CAAC,CACCC,IAAI,CAACc,QAAQ,EACb,GAAG,EACH;IACEC,IAAI,EAAE,GAAG,GAAGhB,CAAC,CAACiB,aAAa,GAAG,KAAK,GAAGZ,MAAM;IAC5CH,EAAE,EACAF,CAAC,CAACiB,aAAa,GACf,QAAQ,GACRZ,MAAM,IACLS,YAAY,GAAG,CAAC,GAAG,GAAG,GAAGA,YAAY,GAAG,EAAE,CAAC;IAC9CI,eAAe,EAAE,IAAI;IACrBC,eAAe,EAAE;EACnB,CAAC,EACD,CAACrB,CAAC,CAAC,MAAM,EAAEK,MAAM,CAACO,OAAO,CAAC,CAAC,CAAC,CAC7B,CACF,CAAC;AACJ"},"metadata":{},"sourceType":"module"}