{"ast":null,"code":"/**\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\r\n */\n\n/**\r\n * Stringify one point, a position (start and end points), or a node’s\r\n * positional information.\r\n *\r\n * @param {Node|NodeLike|Position|Point|null} [value]\r\n * @returns {string}\r\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  }\n\n  // ?\n  return '';\n}\n\n/**\r\n * @param {Point|undefined} point\r\n * @returns {string}\r\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n\n/**\r\n * @param {Position|undefined} pos\r\n * @returns {string}\r\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n\n/**\r\n * @param {number|undefined} value\r\n * @returns {number}\r\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}","map":{"version":3,"names":["stringifyPosition","value","position","point","index","line","column","pos","start","end"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/node_modules/unist-util-stringify-position/index.js"],"sourcesContent":["/**\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\r\n */\r\n\r\n/**\r\n * Stringify one point, a position (start and end points), or a node’s\r\n * positional information.\r\n *\r\n * @param {Node|NodeLike|Position|Point|null} [value]\r\n * @returns {string}\r\n */\r\nexport function stringifyPosition(value) {\r\n  // Nothing.\r\n  if (!value || typeof value !== 'object') {\r\n    return ''\r\n  }\r\n\r\n  // Node.\r\n  if ('position' in value || 'type' in value) {\r\n    return position(value.position)\r\n  }\r\n\r\n  // Position.\r\n  if ('start' in value || 'end' in value) {\r\n    return position(value)\r\n  }\r\n\r\n  // Point.\r\n  if ('line' in value || 'column' in value) {\r\n    return point(value)\r\n  }\r\n\r\n  // ?\r\n  return ''\r\n}\r\n\r\n/**\r\n * @param {Point|undefined} point\r\n * @returns {string}\r\n */\r\nfunction point(point) {\r\n  return index(point && point.line) + ':' + index(point && point.column)\r\n}\r\n\r\n/**\r\n * @param {Position|undefined} pos\r\n * @returns {string}\r\n */\r\nfunction position(pos) {\r\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\r\n}\r\n\r\n/**\r\n * @param {number|undefined} value\r\n * @returns {number}\r\n */\r\nfunction index(value) {\r\n  return value && typeof value === 'number' ? value : 1\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAiB,CAACC,KAAK,EAAE;EACvC;EACA,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACvC,OAAO,EAAE;EACX;;EAEA;EACA,IAAI,UAAU,IAAIA,KAAK,IAAI,MAAM,IAAIA,KAAK,EAAE;IAC1C,OAAOC,QAAQ,CAACD,KAAK,CAACC,QAAQ,CAAC;EACjC;;EAEA;EACA,IAAI,OAAO,IAAID,KAAK,IAAI,KAAK,IAAIA,KAAK,EAAE;IACtC,OAAOC,QAAQ,CAACD,KAAK,CAAC;EACxB;;EAEA;EACA,IAAI,MAAM,IAAIA,KAAK,IAAI,QAAQ,IAAIA,KAAK,EAAE;IACxC,OAAOE,KAAK,CAACF,KAAK,CAAC;EACrB;;EAEA;EACA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA,SAASE,KAAK,CAACA,KAAK,EAAE;EACpB,OAAOC,KAAK,CAACD,KAAK,IAAIA,KAAK,CAACE,IAAI,CAAC,GAAG,GAAG,GAAGD,KAAK,CAACD,KAAK,IAAIA,KAAK,CAACG,MAAM,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA,SAASJ,QAAQ,CAACK,GAAG,EAAE;EACrB,OAAOJ,KAAK,CAACI,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,GAAG,GAAG,GAAGL,KAAK,CAACI,GAAG,IAAIA,GAAG,CAACE,GAAG,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA,SAASL,KAAK,CAACH,KAAK,EAAE;EACpB,OAAOA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,CAAC;AACvD"},"metadata":{},"sourceType":"module"}