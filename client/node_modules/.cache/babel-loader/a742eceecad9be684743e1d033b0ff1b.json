{"ast":null,"code":"/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\nimport { codes } from 'micromark-util-symbol/codes.js';\nimport { constants } from 'micromark-util-symbol/constants.js';\nimport { types } from 'micromark-util-symbol/types.js';\n\n/**\r\n * @param {Effects} effects\r\n * @param {State} ok\r\n * @param {State} nok\r\n * @param {string} type\r\n * @param {string} literalType\r\n * @param {string} literalMarkerType\r\n * @param {string} rawType\r\n * @param {string} stringType\r\n * @param {number} [max=Infinity]\r\n * @returns {State}\r\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return destinationEnclosedBefore;\n    }\n    if (code === codes.eof || code === codes.rightParenthesis || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(types.chunkString, {\n      contentType: constants.contentTypeString\n    });\n    return destinationRaw(code);\n  }\n\n  /** @type {State} */\n  function destinationEnclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(types.chunkString, {\n      contentType: constants.contentTypeString\n    });\n    return destinationEnclosed(code);\n  }\n\n  /** @type {State} */\n  function destinationEnclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString);\n      effects.exit(stringType);\n      return destinationEnclosedBefore(code);\n    }\n    if (code === codes.eof || code === codes.lessThan || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === codes.backslash ? destinationEnclosedEscape : destinationEnclosed;\n  }\n\n  /** @type {State} */\n  function destinationEnclosedEscape(code) {\n    if (code === codes.lessThan || code === codes.greaterThan || code === codes.backslash) {\n      effects.consume(code);\n      return destinationEnclosed;\n    }\n    return destinationEnclosed(code);\n  }\n\n  /** @type {State} */\n  function destinationRaw(code) {\n    if (code === codes.leftParenthesis) {\n      if (++balance > limit) return nok(code);\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === codes.rightParenthesis) {\n      if (!balance--) {\n        effects.exit(types.chunkString);\n        effects.exit(stringType);\n        effects.exit(rawType);\n        effects.exit(type);\n        return ok(code);\n      }\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code);\n      effects.exit(types.chunkString);\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (asciiControl(code)) return nok(code);\n    effects.consume(code);\n    return code === codes.backslash ? destinationRawEscape : destinationRaw;\n  }\n\n  /** @type {State} */\n  function destinationRawEscape(code) {\n    if (code === codes.leftParenthesis || code === codes.rightParenthesis || code === codes.backslash) {\n      effects.consume(code);\n      return destinationRaw;\n    }\n    return destinationRaw(code);\n  }\n}","map":{"version":3,"names":["asciiControl","markdownLineEndingOrSpace","markdownLineEnding","codes","constants","types","factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Number","POSITIVE_INFINITY","balance","start","code","lessThan","enter","consume","exit","destinationEnclosedBefore","eof","rightParenthesis","chunkString","contentType","contentTypeString","destinationRaw","greaterThan","destinationEnclosed","backslash","destinationEnclosedEscape","leftParenthesis","destinationRawEscape"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/node_modules/micromark-factory-destination/dev/index.js"],"sourcesContent":["/**\r\n * @typedef {import('micromark-util-types').Effects} Effects\r\n * @typedef {import('micromark-util-types').State} State\r\n */\r\n\r\nimport {\r\n  asciiControl,\r\n  markdownLineEndingOrSpace,\r\n  markdownLineEnding\r\n} from 'micromark-util-character'\r\nimport {codes} from 'micromark-util-symbol/codes.js'\r\nimport {constants} from 'micromark-util-symbol/constants.js'\r\nimport {types} from 'micromark-util-symbol/types.js'\r\n\r\n/**\r\n * @param {Effects} effects\r\n * @param {State} ok\r\n * @param {State} nok\r\n * @param {string} type\r\n * @param {string} literalType\r\n * @param {string} literalMarkerType\r\n * @param {string} rawType\r\n * @param {string} stringType\r\n * @param {number} [max=Infinity]\r\n * @returns {State}\r\n */\r\n// eslint-disable-next-line max-params\r\nexport function factoryDestination(\r\n  effects,\r\n  ok,\r\n  nok,\r\n  type,\r\n  literalType,\r\n  literalMarkerType,\r\n  rawType,\r\n  stringType,\r\n  max\r\n) {\r\n  const limit = max || Number.POSITIVE_INFINITY\r\n  let balance = 0\r\n\r\n  return start\r\n\r\n  /** @type {State} */\r\n  function start(code) {\r\n    if (code === codes.lessThan) {\r\n      effects.enter(type)\r\n      effects.enter(literalType)\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      return destinationEnclosedBefore\r\n    }\r\n\r\n    if (\r\n      code === codes.eof ||\r\n      code === codes.rightParenthesis ||\r\n      asciiControl(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter(type)\r\n    effects.enter(rawType)\r\n    effects.enter(stringType)\r\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\r\n    return destinationRaw(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function destinationEnclosedBefore(code) {\r\n    if (code === codes.greaterThan) {\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      effects.exit(literalType)\r\n      effects.exit(type)\r\n      return ok\r\n    }\r\n\r\n    effects.enter(stringType)\r\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\r\n    return destinationEnclosed(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function destinationEnclosed(code) {\r\n    if (code === codes.greaterThan) {\r\n      effects.exit(types.chunkString)\r\n      effects.exit(stringType)\r\n      return destinationEnclosedBefore(code)\r\n    }\r\n\r\n    if (\r\n      code === codes.eof ||\r\n      code === codes.lessThan ||\r\n      markdownLineEnding(code)\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === codes.backslash\r\n      ? destinationEnclosedEscape\r\n      : destinationEnclosed\r\n  }\r\n\r\n  /** @type {State} */\r\n  function destinationEnclosedEscape(code) {\r\n    if (\r\n      code === codes.lessThan ||\r\n      code === codes.greaterThan ||\r\n      code === codes.backslash\r\n    ) {\r\n      effects.consume(code)\r\n      return destinationEnclosed\r\n    }\r\n\r\n    return destinationEnclosed(code)\r\n  }\r\n\r\n  /** @type {State} */\r\n  function destinationRaw(code) {\r\n    if (code === codes.leftParenthesis) {\r\n      if (++balance > limit) return nok(code)\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    if (code === codes.rightParenthesis) {\r\n      if (!balance--) {\r\n        effects.exit(types.chunkString)\r\n        effects.exit(stringType)\r\n        effects.exit(rawType)\r\n        effects.exit(type)\r\n        return ok(code)\r\n      }\r\n\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\r\n      if (balance) return nok(code)\r\n      effects.exit(types.chunkString)\r\n      effects.exit(stringType)\r\n      effects.exit(rawType)\r\n      effects.exit(type)\r\n      return ok(code)\r\n    }\r\n\r\n    if (asciiControl(code)) return nok(code)\r\n    effects.consume(code)\r\n    return code === codes.backslash ? destinationRawEscape : destinationRaw\r\n  }\r\n\r\n  /** @type {State} */\r\n  function destinationRawEscape(code) {\r\n    if (\r\n      code === codes.leftParenthesis ||\r\n      code === codes.rightParenthesis ||\r\n      code === codes.backslash\r\n    ) {\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    return destinationRaw(code)\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}