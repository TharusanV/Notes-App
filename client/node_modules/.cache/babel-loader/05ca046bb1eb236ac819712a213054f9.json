{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\components\\\\NoteEditor.jsx\";\nimport { useState } from 'react';\nimport Toolbar from './ToolBar';\nimport { Editor } from 'ckeditor5-custom-build/build/ckeditor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = _ref => {\n  let {\n    prop_GetActiveNote,\n    prop_OnUpdateNote\n  } = _ref;\n  const onEditField = (key, value) => {\n    prop_OnUpdateNote({\n      ...prop_GetActiveNote,\n      id: prop_GetActiveNote.id,\n      [key]: value,\n      lastModified: Date.now()\n    });\n  };\n  Editor.replace('editor1');\n  Editor.on('instanceReady', function (evt) {\n    var editor = evt.editor;\n    editor.on('change', function (e) {\n      var text = editor.editable().getText();\n      console.log(text);\n    });\n  });\n  if (!prop_GetActiveNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"No selected note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-note-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"note-title\",\n        type: \"text\",\n        onChange: event => onEditField(\"title\", event.target.value),\n        autoFocus: true,\n        value: prop_GetActiveNote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        value: prop_GetActiveNote.body,\n        onChange: e => onEditField(\"body\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        className: \"test\",\n        editor: Editor,\n        data: \"<p></p>\",\n        onReady: editor => {\n          console.log('Editor is ready to use!', editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n          onEditField(\"body\", data);\n        },\n        onBlur: (event, editor) => {\n          console.log('Blur.', editor);\n        },\n        onFocus: (event, editor) => {\n          console.log('Focus.', editor);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["useState","Toolbar","Editor","CKEditor","NoteEditor","prop_GetActiveNote","prop_OnUpdateNote","onEditField","key","value","id","lastModified","Date","now","replace","on","evt","editor","e","text","editable","getText","console","log","event","target","title","body","data","getData"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/components/NoteEditor.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport Toolbar from './ToolBar';\r\n\r\nimport {Editor} from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\n\r\nconst NoteEditor = ( {prop_GetActiveNote, prop_OnUpdateNote}) => {\r\n \r\n  const onEditField = (key, value) => {\r\n    \r\n    prop_OnUpdateNote({\r\n      ...prop_GetActiveNote,\r\n      id: prop_GetActiveNote.id,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    })\r\n  };\r\n\r\n  Editor.replace( 'editor1' );\r\n  Editor.on( 'instanceReady', function( evt )\r\n  {\r\n    var editor = evt.editor;\r\n   \r\n   editor.on('change', function (e) { \r\n    var text =  editor.editable().getText();\r\n    console.log(text);\r\n    });\r\n });\r\n\r\n  \r\n\r\n  if(!prop_GetActiveNote) return <div className='no-active-note'>No selected note</div>  \r\n\r\n  return (\r\n    <div className='hero-container'>\r\n      <div className='main-note-editor-container'>     \r\n        <input \r\n          id='note-title' \r\n          type='text' \r\n          onChange={(event) => onEditField(\"title\", event.target.value)} \r\n          autoFocus \r\n          value={prop_GetActiveNote.title} \r\n        />\r\n\r\n\r\n        <textarea\r\n          id=\"body\"\r\n          value={prop_GetActiveNote.body}\r\n          onChange={(e) => onEditField(\"body\", e.target.value)}\r\n        />\r\n\r\n        <CKEditor\r\n          className='test'\r\n          editor={Editor}\r\n          data=\"<p></p>\"\r\n          onReady={editor => {\r\n              console.log('Editor is ready to use!', editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ event, editor, data });\r\n              onEditField(\"body\", data)\r\n          }}\r\n          onBlur={(event, editor) => {\r\n              console.log('Blur.', editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n              console.log('Focus.', editor);\r\n          }}\r\n      />\r\n        \r\n      </div>\r\n    </div>\r\n\r\n\r\n      \r\n    \r\n    \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default NoteEditor\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAAQC,MAAM,QAAO,uCAAuC;AAC5D,SAASC,QAAQ,QAAQ,2BAA2B;AAAA;AAEpD,MAAMC,UAAU,GAAG,QAA8C;EAAA,IAA5C;IAACC,kBAAkB;IAAEC;EAAiB,CAAC;EAE1D,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,KAAK,KAAK;IAElCH,iBAAiB,CAAC;MAChB,GAAGD,kBAAkB;MACrBK,EAAE,EAAEL,kBAAkB,CAACK,EAAE;MACzB,CAACF,GAAG,GAAGC,KAAK;MACZE,YAAY,EAAEC,IAAI,CAACC,GAAG;IACxB,CAAC,CAAC;EACJ,CAAC;EAEDX,MAAM,CAACY,OAAO,CAAE,SAAS,CAAE;EAC3BZ,MAAM,CAACa,EAAE,CAAE,eAAe,EAAE,UAAUC,GAAG,EACzC;IACE,IAAIC,MAAM,GAAGD,GAAG,CAACC,MAAM;IAExBA,MAAM,CAACF,EAAE,CAAC,QAAQ,EAAE,UAAUG,CAAC,EAAE;MAChC,IAAIC,IAAI,GAAIF,MAAM,CAACG,QAAQ,EAAE,CAACC,OAAO,EAAE;MACvCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,CAAC,CAAC;EACL,CAAC,CAAC;EAID,IAAG,CAACd,kBAAkB,EAAE,oBAAO;IAAK,SAAS,EAAC,gBAAgB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;EAErF,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC7B;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QACE,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGmB,KAAK,IAAKjB,WAAW,CAAC,OAAO,EAAEiB,KAAK,CAACC,MAAM,CAAChB,KAAK,CAAE;QAC9D,SAAS;QACT,KAAK,EAAEJ,kBAAkB,CAACqB;MAAM;QAAA;QAAA;QAAA;MAAA,QAChC,eAGF;QACE,EAAE,EAAC,MAAM;QACT,KAAK,EAAErB,kBAAkB,CAACsB,IAAK;QAC/B,QAAQ,EAAGT,CAAC,IAAKX,WAAW,CAAC,MAAM,EAAEW,CAAC,CAACO,MAAM,CAAChB,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD,eAEF,QAAC,QAAQ;QACP,SAAS,EAAC,MAAM;QAChB,MAAM,EAAEP,MAAO;QACf,IAAI,EAAC,SAAS;QACd,OAAO,EAAEe,MAAM,IAAI;UACfK,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,MAAM,CAAC;QAClD,CAAE;QACF,QAAQ,EAAE,CAACO,KAAK,EAAEP,MAAM,KAAK;UACzB,MAAMW,IAAI,GAAGX,MAAM,CAACY,OAAO,EAAE;UAC7BP,OAAO,CAACC,GAAG,CAAC;YAAEC,KAAK;YAAEP,MAAM;YAAEW;UAAK,CAAC,CAAC;UACpCrB,WAAW,CAAC,MAAM,EAAEqB,IAAI,CAAC;QAC7B,CAAE;QACF,MAAM,EAAE,CAACJ,KAAK,EAAEP,MAAM,KAAK;UACvBK,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,MAAM,CAAC;QAChC,CAAE;QACF,OAAO,EAAE,CAACO,KAAK,EAAEP,MAAM,KAAK;UACxBK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,MAAM,CAAC;QACjC;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAEI;IAAA;IAAA;IAAA;EAAA,QACF;AASV,CAAC;AAAA,KA3EKb,UAAU;AA6EhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}